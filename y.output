Nonterminals useless in grammar

   Idents


Terminals unused in grammar

   ENUM


Rules useless in grammar

   57 Idents: Ident
   58       | Ident COMMA Idents


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | function Program

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    4 declarations: %empty
    5             | declaration SEMICOLON declarations

    6 declaration: IDENT COLON INTEGER
    7            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    8 statements: statement SEMICOLON statements
    9           | statement SEMICOLON

   10 statement: var ASSIGN expression
   11          | IF bool_expr THEN statements ENDIF
   12          | IF bool_expr THEN statements ELSE statements ENDIF
   13          | WHILE bool_expr BEGINLOOP statements ENDIF
   14          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   15          | FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP
   16          | READ vars
   17          | WRITE vars
   18          | CONTINUE
   19          | RETURN expression

   20 bool_expr: relation_and_expr
   21          | relation_and_expr OR bool_expr

   22 relation_and_expr: relation_expr_inv AND relation_and_expr
   23                  | relation_expr_inv

   24 relation_expr_inv: NOT relation_expr_inv
   25                  | relation_expr

   26 relation_expr: expression comp expression
   27              | TRUE
   28              | FALSE
   29              | L_PAREN bool_expr R_PAREN

   30 Ident: IDENT

   31 comp: EQ
   32     | NEQ
   33     | LT
   34     | LTE
   35     | GT
   36     | GTE

   37 expressions: expression COMMA expressions
   38            | expression

   39 expression: multiplicative-expr
   40           | multiplicative-expr ADD multiplicative-expr
   41           | multiplicative-expr SUB multiplicative-expr

   42 multiplicative-expr: term
   43                    | term MULT multiplicative-expr
   44                    | term DIV multiplicative-expr
   45                    | term MOD multiplicative-expr

   46 term: SUB var
   47     | SUB NUMBER
   48     | SUB L_PAREN expression R_PAREN
   49     | var
   50     | NUMBER
   51     | L_PAREN expression R_PAREN
   52     | IDENT L_PAREN expressions R_PAREN

   53 vars: var
   54     | var COMMA vars

   55 var: Ident
   56    | Ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGINPARAMS (259) 3
ENDPARAMS (260) 3
BEGINLOCALS (261) 3
ENDLOCALS (262) 3
BEGINBODY (263) 3
ENDBODY (264) 3
INTEGER (265) 6 7
ARRAY (266) 7
ENUM (267)
OF (268) 7
IF (269) 11 12
THEN (270) 11 12
ENDIF (271) 11 12 13
ELSE (272) 12
WHILE (273) 13 14
FOR (274) 15
DO (275) 14
BEGINLOOP (276) 13 14 15
ENDLOOP (277) 14 15
CONTINUE (278) 18
READ (279) 16
WRITE (280) 17
TRUE (281) 27
FALSE (282) 28
SEMICOLON (283) 3 5 8 9 15
COLON (284) 6 7
COMMA (285) 37 54
L_PAREN (286) 29 48 51 52
R_PAREN (287) 29 48 51 52
L_SQUARE_BRACKET (288) 7 56
R_SQUARE_BRACKET (289) 7 56
ASSIGN (290) 10 15
RETURN (291) 19
IDENT (292) 3 6 7 30 52
NUMBER (293) 7 15 47 50
OR (294) 21
AND (295) 22
NOT (296) 24
LT (297) 33
LTE (298) 34
GT (299) 35
GTE (300) 36
EQ (301) 31
NEQ (302) 32
ADD (303) 40
SUB (304) 41 46 47 48
MULT (305) 43
DIV (306) 44
MOD (307) 45


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1 2, on right: 0 2
function (55)
    on left: 3, on right: 2
declarations (56)
    on left: 4 5, on right: 3 5
declaration (57)
    on left: 6 7, on right: 5
statements (58)
    on left: 8 9, on right: 3 8 11 12 13 14 15
statement (59)
    on left: 10 11 12 13 14 15 16 17 18 19, on right: 8 9
bool_expr (60)
    on left: 20 21, on right: 11 12 13 14 15 21 29
relation_and_expr (61)
    on left: 22 23, on right: 20 21 22
relation_expr_inv (62)
    on left: 24 25, on right: 22 23 24
relation_expr (63)
    on left: 26 27 28 29, on right: 25
Ident (64)
    on left: 30, on right: 55 56
comp (65)
    on left: 31 32 33 34 35 36, on right: 26
expressions (66)
    on left: 37 38, on right: 37 52
expression (67)
    on left: 39 40 41, on right: 10 15 19 26 37 38 48 51 56
multiplicative-expr (68)
    on left: 42 43 44 45, on right: 39 40 41 43 44 45
term (69)
    on left: 46 47 48 49 50 51 52, on right: 42 43 44 45
vars (70)
    on left: 53 54, on right: 15 16 17 54
var (71)
    on left: 55 56, on right: 10 46 49 53 54


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    2 Program: function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 6
    function  go to state 3


State 4

    3 function: FUNCTION IDENT . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    2 Program: function Program .

    $default  reduce using rule 2 (Program)


State 7

    3 function: FUNCTION IDENT SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 4 (declarations)

    declarations  go to state 10
    declaration   go to state 11


State 9

    6 declaration: IDENT . COLON INTEGER
    7            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 12


State 10

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 13


State 11

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 14


State 12

    6 declaration: IDENT COLON . INTEGER
    7            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 15
    ARRAY    shift, and go to state 16


State 13

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 17


State 14

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 9

    $default  reduce using rule 4 (declarations)

    declarations  go to state 18
    declaration   go to state 11


State 15

    6 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 6 (declaration)


State 16

    7 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 19


State 17

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 9

    $default  reduce using rule 4 (declarations)

    declarations  go to state 20
    declaration   go to state 11


State 18

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 19

    7 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 21


State 20

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 22


State 21

    7 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 23


State 22

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 24


State 23

    7 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 25


State 24

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    FOR       shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statements  go to state 35
    statement   go to state 36
    Ident       go to state 37
    var         go to state 38


State 25

    7 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 39


State 26

   11 statement: IF . bool_expr THEN statements ENDIF
   12          | IF . bool_expr THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    NOT      shift, and go to state 45
    SUB      shift, and go to state 46

    bool_expr            go to state 47
    relation_and_expr    go to state 48
    relation_expr_inv    go to state 49
    relation_expr        go to state 50
    Ident                go to state 37
    expression           go to state 51
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 27

   13 statement: WHILE . bool_expr BEGINLOOP statements ENDIF

    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    NOT      shift, and go to state 45
    SUB      shift, and go to state 46

    bool_expr            go to state 55
    relation_and_expr    go to state 48
    relation_expr_inv    go to state 49
    relation_expr        go to state 50
    Ident                go to state 37
    expression           go to state 51
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 28

   15 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 34

    Ident  go to state 37
    vars   go to state 56
    var    go to state 57


State 29

   14 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 58


State 30

   18 statement: CONTINUE .

    $default  reduce using rule 18 (statement)


State 31

   16 statement: READ . vars

    IDENT  shift, and go to state 34

    Ident  go to state 37
    vars   go to state 59
    var    go to state 57


State 32

   17 statement: WRITE . vars

    IDENT  shift, and go to state 34

    Ident  go to state 37
    vars   go to state 60
    var    go to state 57


State 33

   19 statement: RETURN . expression

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expression           go to state 62
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 34

   30 Ident: IDENT .

    $default  reduce using rule 30 (Ident)


State 35

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 63


State 36

    8 statements: statement . SEMICOLON statements
    9           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 37

   55 var: Ident .
   56    | Ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 55 (var)


State 38

   10 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 66


State 39

    7 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 40

   27 relation_expr: TRUE .

    $default  reduce using rule 27 (relation_expr)


State 41

   28 relation_expr: FALSE .

    $default  reduce using rule 28 (relation_expr)


State 42

   29 relation_expr: L_PAREN . bool_expr R_PAREN
   51 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    NOT      shift, and go to state 45
    SUB      shift, and go to state 46

    bool_expr            go to state 67
    relation_and_expr    go to state 48
    relation_expr_inv    go to state 49
    relation_expr        go to state 50
    Ident                go to state 37
    expression           go to state 68
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 43

   30 Ident: IDENT .
   52 term: IDENT . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 69

    $default  reduce using rule 30 (Ident)


State 44

   50 term: NUMBER .

    $default  reduce using rule 50 (term)


State 45

   24 relation_expr_inv: NOT . relation_expr_inv

    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    NOT      shift, and go to state 45
    SUB      shift, and go to state 46

    relation_expr_inv    go to state 70
    relation_expr        go to state 50
    Ident                go to state 37
    expression           go to state 51
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 46

   46 term: SUB . var
   47     | SUB . NUMBER
   48     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 34
    NUMBER   shift, and go to state 72

    Ident  go to state 37
    var    go to state 73


State 47

   11 statement: IF bool_expr . THEN statements ENDIF
   12          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 74


State 48

   20 bool_expr: relation_and_expr .
   21          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 75

    $default  reduce using rule 20 (bool_expr)


State 49

   22 relation_and_expr: relation_expr_inv . AND relation_and_expr
   23                  | relation_expr_inv .

    AND  shift, and go to state 76

    $default  reduce using rule 23 (relation_and_expr)


State 50

   25 relation_expr_inv: relation_expr .

    $default  reduce using rule 25 (relation_expr_inv)


State 51

   26 relation_expr: expression . comp expression

    LT   shift, and go to state 77
    LTE  shift, and go to state 78
    GT   shift, and go to state 79
    GTE  shift, and go to state 80
    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82

    comp  go to state 83


State 52

   39 expression: multiplicative-expr .
   40           | multiplicative-expr . ADD multiplicative-expr
   41           | multiplicative-expr . SUB multiplicative-expr

    ADD  shift, and go to state 84
    SUB  shift, and go to state 85

    $default  reduce using rule 39 (expression)


State 53

   42 multiplicative-expr: term .
   43                    | term . MULT multiplicative-expr
   44                    | term . DIV multiplicative-expr
   45                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 42 (multiplicative-expr)


State 54

   49 term: var .

    $default  reduce using rule 49 (term)


State 55

   13 statement: WHILE bool_expr . BEGINLOOP statements ENDIF

    BEGINLOOP  shift, and go to state 89


State 56

   15 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 90


State 57

   53 vars: var .
   54     | var . COMMA vars

    COMMA  shift, and go to state 91

    $default  reduce using rule 53 (vars)


State 58

   14 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    FOR       shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statements  go to state 92
    statement   go to state 36
    Ident       go to state 37
    var         go to state 38


State 59

   16 statement: READ vars .

    $default  reduce using rule 16 (statement)


State 60

   17 statement: WRITE vars .

    $default  reduce using rule 17 (statement)


State 61

   51 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expression           go to state 93
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 62

   19 statement: RETURN expression .

    $default  reduce using rule 19 (statement)


State 63

    3 function: FUNCTION IDENT SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 3 (function)


State 64

    8 statements: statement SEMICOLON . statements
    9           | statement SEMICOLON .

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    FOR       shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    $default  reduce using rule 9 (statements)

    statements  go to state 94
    statement   go to state 36
    Ident       go to state 37
    var         go to state 38


State 65

   56 var: Ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expression           go to state 95
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 66

   10 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expression           go to state 96
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 67

   29 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 97


State 68

   26 relation_expr: expression . comp expression
   51 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 98
    LT       shift, and go to state 77
    LTE      shift, and go to state 78
    GT       shift, and go to state 79
    GTE      shift, and go to state 80
    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82

    comp  go to state 83


State 69

   52 term: IDENT L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expressions          go to state 99
    expression           go to state 100
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 70

   24 relation_expr_inv: NOT relation_expr_inv .

    $default  reduce using rule 24 (relation_expr_inv)


State 71

   48 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expression           go to state 101
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 72

   47 term: SUB NUMBER .

    $default  reduce using rule 47 (term)


State 73

   46 term: SUB var .

    $default  reduce using rule 46 (term)


State 74

   11 statement: IF bool_expr THEN . statements ENDIF
   12          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    FOR       shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statements  go to state 102
    statement   go to state 36
    Ident       go to state 37
    var         go to state 38


State 75

   21 bool_expr: relation_and_expr OR . bool_expr

    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    NOT      shift, and go to state 45
    SUB      shift, and go to state 46

    bool_expr            go to state 103
    relation_and_expr    go to state 48
    relation_expr_inv    go to state 49
    relation_expr        go to state 50
    Ident                go to state 37
    expression           go to state 51
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 76

   22 relation_and_expr: relation_expr_inv AND . relation_and_expr

    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    NOT      shift, and go to state 45
    SUB      shift, and go to state 46

    relation_and_expr    go to state 104
    relation_expr_inv    go to state 49
    relation_expr        go to state 50
    Ident                go to state 37
    expression           go to state 51
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 77

   33 comp: LT .

    $default  reduce using rule 33 (comp)


State 78

   34 comp: LTE .

    $default  reduce using rule 34 (comp)


State 79

   35 comp: GT .

    $default  reduce using rule 35 (comp)


State 80

   36 comp: GTE .

    $default  reduce using rule 36 (comp)


State 81

   31 comp: EQ .

    $default  reduce using rule 31 (comp)


State 82

   32 comp: NEQ .

    $default  reduce using rule 32 (comp)


State 83

   26 relation_expr: expression comp . expression

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expression           go to state 105
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 84

   40 expression: multiplicative-expr ADD . multiplicative-expr

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    multiplicative-expr  go to state 106
    term                 go to state 53
    var                  go to state 54


State 85

   41 expression: multiplicative-expr SUB . multiplicative-expr

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    multiplicative-expr  go to state 107
    term                 go to state 53
    var                  go to state 54


State 86

   43 multiplicative-expr: term MULT . multiplicative-expr

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    multiplicative-expr  go to state 108
    term                 go to state 53
    var                  go to state 54


State 87

   44 multiplicative-expr: term DIV . multiplicative-expr

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    multiplicative-expr  go to state 109
    term                 go to state 53
    var                  go to state 54


State 88

   45 multiplicative-expr: term MOD . multiplicative-expr

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    multiplicative-expr  go to state 110
    term                 go to state 53
    var                  go to state 54


State 89

   13 statement: WHILE bool_expr BEGINLOOP . statements ENDIF

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    FOR       shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statements  go to state 111
    statement   go to state 36
    Ident       go to state 37
    var         go to state 38


State 90

   15 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 112


State 91

   54 vars: var COMMA . vars

    IDENT  shift, and go to state 34

    Ident  go to state 37
    vars   go to state 113
    var    go to state 57


State 92

   14 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 114


State 93

   51 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 98


State 94

    8 statements: statement SEMICOLON statements .

    $default  reduce using rule 8 (statements)


State 95

   56 var: Ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 115


State 96

   10 statement: var ASSIGN expression .

    $default  reduce using rule 10 (statement)


State 97

   29 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 29 (relation_expr)


State 98

   51 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 51 (term)


State 99

   52 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 116


State 100

   37 expressions: expression . COMMA expressions
   38            | expression .

    COMMA  shift, and go to state 117

    $default  reduce using rule 38 (expressions)


State 101

   48 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 118


State 102

   11 statement: IF bool_expr THEN statements . ENDIF
   12          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 119
    ELSE   shift, and go to state 120


State 103

   21 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 21 (bool_expr)


State 104

   22 relation_and_expr: relation_expr_inv AND relation_and_expr .

    $default  reduce using rule 22 (relation_and_expr)


State 105

   26 relation_expr: expression comp expression .

    $default  reduce using rule 26 (relation_expr)


State 106

   40 expression: multiplicative-expr ADD multiplicative-expr .

    $default  reduce using rule 40 (expression)


State 107

   41 expression: multiplicative-expr SUB multiplicative-expr .

    $default  reduce using rule 41 (expression)


State 108

   43 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 43 (multiplicative-expr)


State 109

   44 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 44 (multiplicative-expr)


State 110

   45 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 45 (multiplicative-expr)


State 111

   13 statement: WHILE bool_expr BEGINLOOP statements . ENDIF

    ENDIF  shift, and go to state 121


State 112

   15 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 122


State 113

   54 vars: var COMMA vars .

    $default  reduce using rule 54 (vars)


State 114

   14 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 123


State 115

   56 var: Ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 56 (var)


State 116

   52 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 52 (term)


State 117

   37 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expressions          go to state 124
    expression           go to state 100
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 118

   48 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 48 (term)


State 119

   11 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 11 (statement)


State 120

   12 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    FOR       shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statements  go to state 125
    statement   go to state 36
    Ident       go to state 37
    var         go to state 38


State 121

   13 statement: WHILE bool_expr BEGINLOOP statements ENDIF .

    $default  reduce using rule 13 (statement)


State 122

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    NOT      shift, and go to state 45
    SUB      shift, and go to state 46

    bool_expr            go to state 126
    relation_and_expr    go to state 48
    relation_expr_inv    go to state 49
    relation_expr        go to state 50
    Ident                go to state 37
    expression           go to state 51
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 123

   14 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    TRUE     shift, and go to state 40
    FALSE    shift, and go to state 41
    L_PAREN  shift, and go to state 42
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    NOT      shift, and go to state 45
    SUB      shift, and go to state 46

    bool_expr            go to state 127
    relation_and_expr    go to state 48
    relation_expr_inv    go to state 49
    relation_expr        go to state 50
    Ident                go to state 37
    expression           go to state 51
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 124

   37 expressions: expression COMMA expressions .

    $default  reduce using rule 37 (expressions)


State 125

   12 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 128


State 126

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 129


State 127

   14 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 14 (statement)


State 128

   12 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 12 (statement)


State 129

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 34

    Ident  go to state 37
    vars   go to state 130
    var    go to state 57


State 130

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 131


State 131

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 61
    IDENT    shift, and go to state 43
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 46

    Ident                go to state 37
    expression           go to state 132
    multiplicative-expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 132

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 133


State 133

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    FOR       shift, and go to state 28
    DO        shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDENT     shift, and go to state 34

    statements  go to state 134
    statement   go to state 36
    Ident       go to state 37
    var         go to state 38


State 134

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 135

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 15 (statement)
