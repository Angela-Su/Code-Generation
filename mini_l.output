Terminals unused in grammar

   ENUM


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | function Program

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    4 declarations: %empty
    5             | declaration SEMICOLON declarations

    6 declaration: Idents COLON INTEGER
    7            | Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    8 statements: statement SEMICOLON statements
    9           | statement SEMICOLON

   10 statement: var ASSIGN expression
   11          | IF bool_expr THEN statements ENDIF
   12          | IF bool_expr THEN statements ELSE statements ENDIF
   13          | WHILE bool_expr BEGINLOOP statements ENDIF
   14          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   15          | FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP
   16          | READ vars
   17          | WRITE vars
   18          | CONTINUE
   19          | RETURN expression

   20 bool_expr: relation_and_expr
   21          | relation_and_expr OR bool_expr

   22 relation_and_expr: relation_expr_inv AND relation_and_expr
   23                  | relation_expr_inv

   24 relation_expr_inv: NOT relation_expr_inv
   25                  | relation_expr

   26 relation_expr: expression comp expression
   27              | TRUE
   28              | FALSE
   29              | L_PAREN bool_expr R_PAREN

   30 Ident: IDENT

   31 Idents: Ident
   32       | Ident COMMA Idents

   33 FuncIdent: IDENT

   34 comp: EQ
   35     | NEQ
   36     | LT
   37     | LTE
   38     | GT
   39     | GTE

   40 expressions: expression COMMA expressions
   41            | expression

   42 expression: multiplicative-expr
   43           | multiplicative-expr ADD multiplicative-expr
   44           | multiplicative-expr SUB multiplicative-expr

   45 multiplicative-expr: term
   46                    | term MULT multiplicative-expr
   47                    | term DIV multiplicative-expr
   48                    | term MOD multiplicative-expr

   49 term: SUB var
   50     | SUB NUMBER
   51     | SUB L_PAREN expression R_PAREN
   52     | var
   53     | NUMBER
   54     | L_PAREN expression R_PAREN
   55     | Ident L_PAREN expressions R_PAREN

   56 vars: var
   57     | var COMMA vars

   58 var: Ident
   59    | Ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGINPARAMS (259) 3
ENDPARAMS (260) 3
BEGINLOCALS (261) 3
ENDLOCALS (262) 3
BEGINBODY (263) 3
ENDBODY (264) 3
INTEGER (265) 6 7
ARRAY (266) 7
ENUM (267)
OF (268) 7
IF (269) 11 12
THEN (270) 11 12
ENDIF (271) 11 12 13
ELSE (272) 12
WHILE (273) 13 14
FOR (274) 15
DO (275) 14
BEGINLOOP (276) 13 14 15
ENDLOOP (277) 14 15
CONTINUE (278) 18
READ (279) 16
WRITE (280) 17
TRUE (281) 27
FALSE (282) 28
SEMICOLON (283) 3 5 8 9 15
COLON (284) 6 7
COMMA (285) 32 40 57
L_PAREN (286) 29 51 54 55
R_PAREN (287) 29 51 54 55
L_SQUARE_BRACKET (288) 7 59
R_SQUARE_BRACKET (289) 7 59
ASSIGN (290) 10 15
RETURN (291) 19
IDENT (292) 30 33
NUMBER (293) 7 15 50 53
OR (294) 21
AND (295) 22
NOT (296) 24
LT (297) 36
LTE (298) 37
GT (299) 38
GTE (300) 39
EQ (301) 34
NEQ (302) 35
ADD (303) 43
SUB (304) 44 49 50 51
MULT (305) 46
DIV (306) 47
MOD (307) 48


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1 2, on right: 0 2
function (55)
    on left: 3, on right: 2
declarations (56)
    on left: 4 5, on right: 3 5
declaration (57)
    on left: 6 7, on right: 5
statements (58)
    on left: 8 9, on right: 3 8 11 12 13 14 15
statement (59)
    on left: 10 11 12 13 14 15 16 17 18 19, on right: 8 9
bool_expr (60)
    on left: 20 21, on right: 11 12 13 14 15 21 29
relation_and_expr (61)
    on left: 22 23, on right: 20 21 22
relation_expr_inv (62)
    on left: 24 25, on right: 22 23 24
relation_expr (63)
    on left: 26 27 28 29, on right: 25
Ident (64)
    on left: 30, on right: 31 32 55 58 59
Idents (65)
    on left: 31 32, on right: 6 7 32
FuncIdent (66)
    on left: 33, on right: 3
comp (67)
    on left: 34 35 36 37 38 39, on right: 26
expressions (68)
    on left: 40 41, on right: 40 55
expression (69)
    on left: 42 43 44, on right: 10 15 19 26 40 41 51 54 59
multiplicative-expr (70)
    on left: 45 46 47 48, on right: 42 43 44 46 47 48
term (71)
    on left: 49 50 51 52 53 54 55, on right: 45 46 47 48
vars (72)
    on left: 56 57, on right: 15 16 17 57
var (73)
    on left: 58 59, on right: 10 49 52 56 57


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 4

    FuncIdent  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    2 Program: function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 7
    function  go to state 3


State 4

   33 FuncIdent: IDENT .

    $default  reduce using rule 33 (FuncIdent)


State 5

    3 function: FUNCTION FuncIdent . SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    2 Program: function Program .

    $default  reduce using rule 2 (Program)


State 8

    3 function: FUNCTION FuncIdent SEMICOLON . BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINPARAMS  shift, and go to state 9


State 9

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS . declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 4 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    Ident         go to state 13
    Idents        go to state 14


State 10

   30 Ident: IDENT .

    $default  reduce using rule 30 (Ident)


State 11

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations . ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    ENDPARAMS  shift, and go to state 15


State 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

   31 Idents: Ident .
   32       | Ident . COMMA Idents

    COMMA  shift, and go to state 17

    $default  reduce using rule 31 (Idents)


State 14

    6 declaration: Idents . COLON INTEGER
    7            | Idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 15

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS . BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY

    BEGINLOCALS  shift, and go to state 19


State 16

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 4 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    Ident         go to state 13
    Idents        go to state 14


State 17

   32 Idents: Ident COMMA . Idents

    IDENT  shift, and go to state 10

    Ident   go to state 13
    Idents  go to state 21


State 18

    6 declaration: Idents COLON . INTEGER
    7            | Idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 19

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS . declarations ENDLOCALS BEGINBODY statements ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 4 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    Ident         go to state 13
    Idents        go to state 14


State 20

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 21

   32 Idents: Ident COMMA Idents .

    $default  reduce using rule 32 (Idents)


State 22

    6 declaration: Idents COLON INTEGER .

    $default  reduce using rule 6 (declaration)


State 23

    7 declaration: Idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 24

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations . ENDLOCALS BEGINBODY statements ENDBODY

    ENDLOCALS  shift, and go to state 26


State 25

    7 declaration: Idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS . BEGINBODY statements ENDBODY

    BEGINBODY  shift, and go to state 28


State 27

    7 declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY . statements ENDBODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    FOR       shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    statements  go to state 38
    statement   go to state 39
    Ident       go to state 40
    var         go to state 41


State 29

    7 declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 30

   11 statement: IF . bool_expr THEN statements ENDIF
   12          | IF . bool_expr THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    bool_expr            go to state 49
    relation_and_expr    go to state 50
    relation_expr_inv    go to state 51
    relation_expr        go to state 52
    Ident                go to state 53
    expression           go to state 54
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 31

   13 statement: WHILE . bool_expr BEGINLOOP statements ENDIF

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    bool_expr            go to state 58
    relation_and_expr    go to state 50
    relation_expr_inv    go to state 51
    relation_expr        go to state 52
    Ident                go to state 53
    expression           go to state 54
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 32

   15 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 10

    Ident  go to state 40
    vars   go to state 59
    var    go to state 60


State 33

   14 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 61


State 34

   18 statement: CONTINUE .

    $default  reduce using rule 18 (statement)


State 35

   16 statement: READ . vars

    IDENT  shift, and go to state 10

    Ident  go to state 40
    vars   go to state 62
    var    go to state 60


State 36

   17 statement: WRITE . vars

    IDENT  shift, and go to state 10

    Ident  go to state 40
    vars   go to state 63
    var    go to state 60


State 37

   19 statement: RETURN . expression

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expression           go to state 65
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 38

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements . ENDBODY

    ENDBODY  shift, and go to state 66


State 39

    8 statements: statement . SEMICOLON statements
    9           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 40

   58 var: Ident .
   59    | Ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 58 (var)


State 41

   10 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 42

    7 declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 70


State 43

   27 relation_expr: TRUE .

    $default  reduce using rule 27 (relation_expr)


State 44

   28 relation_expr: FALSE .

    $default  reduce using rule 28 (relation_expr)


State 45

   29 relation_expr: L_PAREN . bool_expr R_PAREN
   54 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    bool_expr            go to state 71
    relation_and_expr    go to state 50
    relation_expr_inv    go to state 51
    relation_expr        go to state 52
    Ident                go to state 53
    expression           go to state 72
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 46

   53 term: NUMBER .

    $default  reduce using rule 53 (term)


State 47

   24 relation_expr_inv: NOT . relation_expr_inv

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    relation_expr_inv    go to state 73
    relation_expr        go to state 52
    Ident                go to state 53
    expression           go to state 54
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 48

   49 term: SUB . var
   50     | SUB . NUMBER
   51     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 75

    Ident  go to state 40
    var    go to state 76


State 49

   11 statement: IF bool_expr . THEN statements ENDIF
   12          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 77


State 50

   20 bool_expr: relation_and_expr .
   21          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 78

    $default  reduce using rule 20 (bool_expr)


State 51

   22 relation_and_expr: relation_expr_inv . AND relation_and_expr
   23                  | relation_expr_inv .

    AND  shift, and go to state 79

    $default  reduce using rule 23 (relation_and_expr)


State 52

   25 relation_expr_inv: relation_expr .

    $default  reduce using rule 25 (relation_expr_inv)


State 53

   55 term: Ident . L_PAREN expressions R_PAREN
   58 var: Ident .
   59    | Ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 80
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 58 (var)


State 54

   26 relation_expr: expression . comp expression

    LT   shift, and go to state 81
    LTE  shift, and go to state 82
    GT   shift, and go to state 83
    GTE  shift, and go to state 84
    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86

    comp  go to state 87


State 55

   42 expression: multiplicative-expr .
   43           | multiplicative-expr . ADD multiplicative-expr
   44           | multiplicative-expr . SUB multiplicative-expr

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89

    $default  reduce using rule 42 (expression)


State 56

   45 multiplicative-expr: term .
   46                    | term . MULT multiplicative-expr
   47                    | term . DIV multiplicative-expr
   48                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 45 (multiplicative-expr)


State 57

   52 term: var .

    $default  reduce using rule 52 (term)


State 58

   13 statement: WHILE bool_expr . BEGINLOOP statements ENDIF

    BEGINLOOP  shift, and go to state 93


State 59

   15 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 94


State 60

   56 vars: var .
   57     | var . COMMA vars

    COMMA  shift, and go to state 95

    $default  reduce using rule 56 (vars)


State 61

   14 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    FOR       shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    statements  go to state 96
    statement   go to state 39
    Ident       go to state 40
    var         go to state 41


State 62

   16 statement: READ vars .

    $default  reduce using rule 16 (statement)


State 63

   17 statement: WRITE vars .

    $default  reduce using rule 17 (statement)


State 64

   54 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expression           go to state 97
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 65

   19 statement: RETURN expression .

    $default  reduce using rule 19 (statement)


State 66

    3 function: FUNCTION FuncIdent SEMICOLON BEGINPARAMS declarations ENDPARAMS BEGINLOCALS declarations ENDLOCALS BEGINBODY statements ENDBODY .

    $default  reduce using rule 3 (function)


State 67

    8 statements: statement SEMICOLON . statements
    9           | statement SEMICOLON .

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    FOR       shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    $default  reduce using rule 9 (statements)

    statements  go to state 98
    statement   go to state 39
    Ident       go to state 40
    var         go to state 41


State 68

   59 var: Ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expression           go to state 99
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 69

   10 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expression           go to state 100
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 70

    7 declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 71

   29 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 101


State 72

   26 relation_expr: expression . comp expression
   54 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 102
    LT       shift, and go to state 81
    LTE      shift, and go to state 82
    GT       shift, and go to state 83
    GTE      shift, and go to state 84
    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86

    comp  go to state 87


State 73

   24 relation_expr_inv: NOT relation_expr_inv .

    $default  reduce using rule 24 (relation_expr_inv)


State 74

   51 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expression           go to state 103
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 75

   50 term: SUB NUMBER .

    $default  reduce using rule 50 (term)


State 76

   49 term: SUB var .

    $default  reduce using rule 49 (term)


State 77

   11 statement: IF bool_expr THEN . statements ENDIF
   12          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    FOR       shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    statements  go to state 104
    statement   go to state 39
    Ident       go to state 40
    var         go to state 41


State 78

   21 bool_expr: relation_and_expr OR . bool_expr

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    bool_expr            go to state 105
    relation_and_expr    go to state 50
    relation_expr_inv    go to state 51
    relation_expr        go to state 52
    Ident                go to state 53
    expression           go to state 54
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 79

   22 relation_and_expr: relation_expr_inv AND . relation_and_expr

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    relation_and_expr    go to state 106
    relation_expr_inv    go to state 51
    relation_expr        go to state 52
    Ident                go to state 53
    expression           go to state 54
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 80

   55 term: Ident L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expressions          go to state 107
    expression           go to state 108
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 81

   36 comp: LT .

    $default  reduce using rule 36 (comp)


State 82

   37 comp: LTE .

    $default  reduce using rule 37 (comp)


State 83

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 84

   39 comp: GTE .

    $default  reduce using rule 39 (comp)


State 85

   34 comp: EQ .

    $default  reduce using rule 34 (comp)


State 86

   35 comp: NEQ .

    $default  reduce using rule 35 (comp)


State 87

   26 relation_expr: expression comp . expression

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expression           go to state 109
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 88

   43 expression: multiplicative-expr ADD . multiplicative-expr

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    multiplicative-expr  go to state 110
    term                 go to state 56
    var                  go to state 57


State 89

   44 expression: multiplicative-expr SUB . multiplicative-expr

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    multiplicative-expr  go to state 111
    term                 go to state 56
    var                  go to state 57


State 90

   46 multiplicative-expr: term MULT . multiplicative-expr

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    multiplicative-expr  go to state 112
    term                 go to state 56
    var                  go to state 57


State 91

   47 multiplicative-expr: term DIV . multiplicative-expr

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    multiplicative-expr  go to state 113
    term                 go to state 56
    var                  go to state 57


State 92

   48 multiplicative-expr: term MOD . multiplicative-expr

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    multiplicative-expr  go to state 114
    term                 go to state 56
    var                  go to state 57


State 93

   13 statement: WHILE bool_expr BEGINLOOP . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    FOR       shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    statements  go to state 115
    statement   go to state 39
    Ident       go to state 40
    var         go to state 41


State 94

   15 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 116


State 95

   57 vars: var COMMA . vars

    IDENT  shift, and go to state 10

    Ident  go to state 40
    vars   go to state 117
    var    go to state 60


State 96

   14 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 118


State 97

   54 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 102


State 98

    8 statements: statement SEMICOLON statements .

    $default  reduce using rule 8 (statements)


State 99

   59 var: Ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


State 100

   10 statement: var ASSIGN expression .

    $default  reduce using rule 10 (statement)


State 101

   29 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 29 (relation_expr)


State 102

   54 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 54 (term)


State 103

   51 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 120


State 104

   11 statement: IF bool_expr THEN statements . ENDIF
   12          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 121
    ELSE   shift, and go to state 122


State 105

   21 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 21 (bool_expr)


State 106

   22 relation_and_expr: relation_expr_inv AND relation_and_expr .

    $default  reduce using rule 22 (relation_and_expr)


State 107

   55 term: Ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 123


State 108

   40 expressions: expression . COMMA expressions
   41            | expression .

    COMMA  shift, and go to state 124

    $default  reduce using rule 41 (expressions)


State 109

   26 relation_expr: expression comp expression .

    $default  reduce using rule 26 (relation_expr)


State 110

   43 expression: multiplicative-expr ADD multiplicative-expr .

    $default  reduce using rule 43 (expression)


State 111

   44 expression: multiplicative-expr SUB multiplicative-expr .

    $default  reduce using rule 44 (expression)


State 112

   46 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 46 (multiplicative-expr)


State 113

   47 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 47 (multiplicative-expr)


State 114

   48 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 48 (multiplicative-expr)


State 115

   13 statement: WHILE bool_expr BEGINLOOP statements . ENDIF

    ENDIF  shift, and go to state 125


State 116

   15 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 126


State 117

   57 vars: var COMMA vars .

    $default  reduce using rule 57 (vars)


State 118

   14 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 127


State 119

   59 var: Ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 59 (var)


State 120

   51 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 51 (term)


State 121

   11 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 11 (statement)


State 122

   12 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    FOR       shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    statements  go to state 128
    statement   go to state 39
    Ident       go to state 40
    var         go to state 41


State 123

   55 term: Ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 55 (term)


State 124

   40 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expressions          go to state 129
    expression           go to state 108
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 125

   13 statement: WHILE bool_expr BEGINLOOP statements ENDIF .

    $default  reduce using rule 13 (statement)


State 126

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    bool_expr            go to state 130
    relation_and_expr    go to state 50
    relation_expr_inv    go to state 51
    relation_expr        go to state 52
    Ident                go to state 53
    expression           go to state 54
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 127

   14 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    bool_expr            go to state 131
    relation_and_expr    go to state 50
    relation_expr_inv    go to state 51
    relation_expr        go to state 52
    Ident                go to state 53
    expression           go to state 54
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 128

   12 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 132


State 129

   40 expressions: expression COMMA expressions .

    $default  reduce using rule 40 (expressions)


State 130

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 133


State 131

   14 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 14 (statement)


State 132

   12 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 12 (statement)


State 133

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . vars ASSIGN expression BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 10

    Ident  go to state 40
    vars   go to state 134
    var    go to state 60


State 134

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars . ASSIGN expression BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 135


State 135

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN . expression BEGINLOOP statements ENDLOOP

    L_PAREN  shift, and go to state 64
    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 48

    Ident                go to state 53
    expression           go to state 136
    multiplicative-expr  go to state 55
    term                 go to state 56
    var                  go to state 57


State 136

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 137


State 137

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    FOR       shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 10

    statements  go to state 138
    statement   go to state 39
    Ident       go to state 40
    var         go to state 41


State 138

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 139

   15 statement: FOR vars ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON vars ASSIGN expression BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 15 (statement)
